@model IPagedList<prjNovelReader.Models.ViewModels.IndexViewModel>
@{
    ViewBag.Title = "書庫";
}
<style>

    @@media(min-width: 769px) and (max-width:2200px) {
        .searchArea {
            display: -webkit-flex;
            display: flex;
        }

            .searchArea .searchString, .searchCategory {
                -webkit-flex: initial;
                flex: initial;
                width: 200px;
                min-width: 100px;
                margin: 0 30px
            }

            .searchArea .searchStart, #resetBtn {
                -webkit-flex: initial;
                flex: initial;
                width: 200px;
                min-width: 100px;
                height: 34px;
                margin: 24px 30px 0 30px;
            }
    }

    @@media(max-width:768px) {
        .searchString, .searchCategory,.searchArea_2 {
            display: -webkit-flex;
            display: flex;
            margin:10px 0;
        }

            .searchString label, input {
                -webkit-flex: 1;
                flex: 1;
                margin: 0 20px;
            }
            .searchCategory label, select {
                -webkit-flex: 1;
                flex: 1;
                margin: 0 20px;
            }
        .searchArea_2 div, input {
            -webkit-flex: 1;
            flex: 1;
            margin:0 20px;
        }
    }
</style>
<h2>書庫</h2>

<div class="container body-content">
    @using (Html.BeginForm("index", "Home", 0, new { @class = "searchArea" }))
    {
        <div class="searchString">
            @Html.Label("依名稱搜尋 : ")
            @Html.TextBox("searchString", ViewBag.searchString as string, new { @class = "form-control" })
        </div>
        <div class="searchCategory">
            @Html.Label("依種類搜尋 : ")
            @Html.Raw(ViewBag.categoryDList)
        </div>
        <div class="searchArea_2">
            <input type="submit" class="btn btn-default searchStart" value="開始搜尋" />
            <div class="btn btn-default" id="resetBtn">清除篩選</div>
        </div>

    }
    <div id="OrderData">
        Loading...
    </div>
</div>

<script>
        $('#categoryId').change(function () {
            window.location = `/Home/index?categoryId=${$('#categoryId').val()}&searchString=${$('#searchString').val()}`})
        $('#resetBtn').click(() => { window.location = "/Home/index" })

        $(() => {
            let page = @ViewBag.page;
            fetchPage(page);
        })
        function fetchPage(page) {
            $('#OrderData').html('<div id="OrderData">Loading...</div>')
            let pagePartialUrl = '@Url.Action("Bookshelf", "Home")';
            $.ajax({
                url: pagePartialUrl,
                data: { page: page, categoryId: @ViewBag.categoryId , searchString: $('#searchString').val()},
                type: 'GET',
                success: data => {
                    setTimeout(() => {
                        console.log("完成!")
                        getPagedList(data)
                    }, 0)
                },
                error: () => { console.log("失敗")}
            })
        };

        function getPagedList(data) {
            $('#OrderData').html(data)
            $('#OrderData .pagination li a').each(function (i, item) {
                let hyperLinkUrl = $(item).attr('href')
                if (typeof hyperLinkUrl !== 'undefined' && hyperLinkUrl !== false) {
                    let pageNumber = $(item).attr('href').replace('/?page=', '')
                    $(item).attr('href', '?page=' + pageNumber).click(function (event) {
                        event.preventDefault();
                        let url = '/Home/index' + $(item).attr('href');
                        let newTitle = "TEST";
                        fetchPage(pageNumber);
                        if (history.pushState) {
                            let state = ({
                                page: pageNumber, title: newTitle
                            })
                            window.history.pushState(state, newTitle, url);
                        }
                    })
                } else {
                    if ($(item).parent('li').attr('class') !== "active") {
                        $(item).parent('li').css("visibility","hidden")
                    }

                }
            })
        }

        window.addEventListener('popstate', function (e) {
            if (e.state === null) fetchPage(1);
            else {
                fetchPage(e.state.page);
            }
        },false)
</script>







