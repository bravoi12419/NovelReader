@model IPagedList<prjNovelReader.Models.ViewModels.IndexViewModel>
<style>
    .pageArea {
        display: -webkit-flex;
        display: flex;
    }
    @@media(min-width: 769px) and (max-width:2200px) {
        .pageArea .pagination-container {
            -webkit-flex: 1;
            flex: 1;
            margin: 0 20px;
            padding-left: 200px;
        }
        .pageArea .pageStatus {
            -webkit-flex: 1;
            flex: 1;
            margin: 0 20px;
            padding-top: 30px;
        }
    }

        @@media(max-width:768px) {
            table th, table td {
                max-width: 200px;
            }

                table th:nth-child(3), table th:nth-child(4), table td:nth-child(3), table td:nth-child(4) {
                    display: none;
                }

            .pageArea {
                display: block;
            }

                .pageArea .pageStatus {
                    display: none;
                }
        }
</style>
<div class="pageArea">
    @Html.PagedListPager(Model,page=>Url.Action("index",new { page}),
    new PagedListRenderOptions
    {
        LinkToFirstPageFormat = "第一頁",
        LinkToPreviousPageFormat = "前一頁",
        LinkToNextPageFormat = "下一頁",
        LinkToLastPageFormat = "最後一頁",
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
    })
    <div class="pageStatus text-center">

    </div>
</div>
<table class="table table-striped table-hover">
    <thead>
        <tr class="row">
            <th class="col-md-3">
                @Html.DisplayNameFor(m => m.FirstOrDefault().NovelName)
            </th>
            <th class="col-md-3">
                @Html.DisplayNameFor(m => m.FirstOrDefault().Category)
            </th>
            <th class="col-md-3">
                @Html.DisplayNameFor(m => m.FirstOrDefault().Author)
            </th>
            <th class="col-md-3">
                @Html.DisplayNameFor(m => m.FirstOrDefault().Type)
            </th>
        </tr>
        @foreach (var item in Model)
        {
            <tr class="row">
                <td class="col-md-3">
                    <a href="@Url.Action("ReadNovel", "Home", new { novelId = item.Id })">
                        @Html.DisplayFor(modelItem => item.NovelName)
                    </a>
                </td>
                <td class="col-md-3">
                    @Html.DisplayFor(modelItem => item.Author)
                </td>
                <td class="col-md-3">
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td class="col-md-3">
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
            </tr>
        }
    </thead>
</table>
<script>
    $(() => {
        let device = $(window).width() > 800 ? "desktop" : "mobile";
        console.log(device)
        rwdSet(device)
    })
    $(window).resize(() => {
        let device = $(window).width() > 800 ? "desktop" : "mobile";
        console.log(device)
        rwdSet(device)
    })
    function rwdSet(device) {
        console.log(@Model.PageNumber)
        console.log(@Model.PageCount)
        if (device === "mobile") {
            $('.PagedList-skipToFirst a').text("<<")
            $('.PagedList-skipToPrevious a').text("<")
            $('.PagedList-skipToNext a').text(">")
            $('.PagedList-skipToLast a').text(">>")
            $('.pageStatus').text(`${@Model.PageNumber}/${@Model.PageCount}`)
        } else {
            $('.PagedList-skipToFirst a').text("第一頁")
            $('.PagedList-skipToPrevious a').text("前一頁")
            $('.PagedList-skipToNext a').text("下一頁")
            $('.PagedList-skipToLast a').text("最尾頁")
            $('.pageStatus').text(`第 ${@Model.PageNumber} 頁 / 第 ${@Model.PageCount} 頁`)
        }
    }
</script>